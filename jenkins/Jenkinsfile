pipeline {
    // Define o agent como none porque não vou trabalhar dessa vez com agente global, ou seja, um agente que vai executar
    // todo o meu pipeline. Ao invés disso, eu vou trabalhar com agentes específicos, ou seja, stage vai definir o seu agente específico.
    agent none
    
    // Habilita também o Dockerfile. Dessa forma, a imagem é construída primeiro usando o Dockerfile do repositório.
    // agent { dockerfile true }
    stages {
        stage('Build') {
            // Define o agente que vai executar o estágio de build. Nesse caso, o docker, que vai fazer o pull da minha imagem.
            // Esse agente somente vai existir enquando esse stage estiver sendo executado.
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            // Define os passos
            steps {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                // --junit-xml usa o plugin do junit que já vem instalado no jenkins
                // test-reports/results.xml salva o relatório nessa pasta dentro do workspace
                sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            // Executa uma ação após terminar o passo acima. A diretiva post tem 4 status:
            // always - Sempre executa a ação após terminar os steps.
            // success - somente executa se o step anterior terminar com sucesso.
            // failure - somente executa se o step anterior terminar com falha.
            // unstable - somente executa se o step anterior estiver unstable (as vezes passa, as vezes não)
            // Em resumo: Após terminar os steps, sempre exiba o resultado do arquivo xml gerado no step acima.
            post {
                always {
                    // expõe o resultado na interface do jenkins
                    junit 'test-reports/results.xml'
                }
            }
        }
//         stage('Deliver') {
//             agent {
//                 docker {
//                     image 'cdrx/pyinstaller-linux:python2'
//                 }
//             }
//             steps {
//                 sh 'pyinstaller --onefile sources/add2vals.py'
//             }
//             post {
//                 success {
//                     archiveArtifacts 'dist/add2vals'
//                 }
//             }
//         }
    }
}
